{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"AreaMenu\",\n  props: [],\n  watch: {},\n  data() {\n    return {\n      items: []\n    };\n  },\n  methods: {\n    loadMenu() {\n      const token = sessionStorage.getItem(\"token\");\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token\n      };\n      const url = this.$BASE_URL + \"/api/get_areas/\";\n      axios.post(url, {\n        offset: 0,\n        limit: 100\n      }, {\n        headers\n      }).then(response => {\n        if (!response.data[0].auth_fail) {\n          this.items = JSON.parse(JSON.stringify(response.data[0].result));\n          var count = 0;\n          for (var item of this.items) {\n            if (count == 0) {\n              item.selected = true;\n              this.loadArea(item.id_republic, item.id_area);\n            } else {\n              item.selected = false;\n            }\n            count++;\n          }\n        }\n      });\n    },\n    loadArea(id_republic, id_area) {\n      for (var item of this.items) {\n        if (item.id_area == id_area && item.id_republic == id_republic) {\n          item.selected = true;\n          this.$emit(\"area-clicked\", item);\n        } else {\n          item.selected = false;\n        }\n      }\n    }\n  },\n  components: {},\n  mounted() {\n    this.loadMenu();\n  }\n};","map":{"version":3,"names":["axios","name","props","watch","data","items","methods","loadMenu","token","sessionStorage","getItem","headers","Authorization","url","$BASE_URL","post","offset","limit","then","response","auth_fail","JSON","parse","stringify","result","count","item","selected","loadArea","id_republic","id_area","$emit","components","mounted"],"sources":["/Users/fayzulla/Dev/kadastr/frontend/kadastr/src/components/AreaMenu.vue"],"sourcesContent":["<template>\n  <div class=\"menu\">\n    <div\n      v-for=\"(item, index) in items\"\n      class=\"menu-item\"\n      @click=\"loadArea(item.id_republic, item.id_area)\"\n      v-bind:key=\"index\"\n      v-bind:class=\"item.selected ? 'selected-menu-item' : ''\"\n    >\n      {{ item.area_name }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"AreaMenu\",\n  props: [],\n  watch: {},\n  data() {\n    return {\n      items: [],\n    };\n  },\n  methods: {\n    loadMenu() {\n      const token = sessionStorage.getItem(\"token\");\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      };\n      const url = this.$BASE_URL + \"/api/get_areas/\";\n      axios\n        .post(url, { offset: 0, limit: 100 }, { headers })\n        .then((response) => {\n          if (!response.data[0].auth_fail) {\n            this.items = JSON.parse(JSON.stringify(response.data[0].result));\n            var count = 0;\n            for (var item of this.items) {\n              if (count == 0) {\n                item.selected = true;\n                this.loadArea(item.id_republic, item.id_area);\n              } else {\n                item.selected = false;\n              }\n              count++;\n            }\n          }\n        });\n    },\n    loadArea(id_republic, id_area) {\n      for (var item of this.items) {\n        if (item.id_area == id_area && item.id_republic == id_republic) {\n          item.selected = true;\n          this.$emit(\"area-clicked\", item);\n        } else {\n          item.selected = false;\n        }\n      }\n    },\n  },\n  components: {},\n  mounted() {\n    this.loadMenu();\n  },\n};\n</script>\n\n<style scoped>\n.menu {\n  width: 35%;\n  height: 100%;\n  float: left;\n  display: inline;\n  margin-left: 10px;\n}\n\n.menu-item {\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  border-radius: 5px;\n  min-width: calc(100% - 250px);\n  height: 52px;\n  color: #fff;\n  background-color: #372d69;\n  font-weight: bold;\n  margin-right: 20px;\n  margin-bottom: 8px;\n  padding-left: 20px;\n}\n\n.menu-item:hover {\n  background-color: #23185b;\n  cursor: pointer;\n}\n\n.selected-menu-item {\n  background-color: #23185b;\n  color: #fff9a4;\n}\n</style>\n"],"mappings":"AAeA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE,CAAC,CAAC;EACTC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACT,MAAMC,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;MAC7C,MAAMC,OAAM,GAAI;QACd,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,SAAQ,GAAIJ;MAC7B,CAAC;MACD,MAAMK,GAAE,GAAI,IAAI,CAACC,SAAQ,GAAI,iBAAiB;MAC9Cd,KAAI,CACDe,IAAI,CAACF,GAAG,EAAE;QAAEG,MAAM,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAI,CAAC,EAAE;QAAEN;MAAQ,CAAC,EAChDO,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACA,QAAQ,CAACf,IAAI,CAAC,CAAC,CAAC,CAACgB,SAAS,EAAE;UAC/B,IAAI,CAACf,KAAI,GAAIgB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACJ,QAAQ,CAACf,IAAI,CAAC,CAAC,CAAC,CAACoB,MAAM,CAAC,CAAC;UAChE,IAAIC,KAAI,GAAI,CAAC;UACb,KAAK,IAAIC,IAAG,IAAK,IAAI,CAACrB,KAAK,EAAE;YAC3B,IAAIoB,KAAI,IAAK,CAAC,EAAE;cACdC,IAAI,CAACC,QAAO,GAAI,IAAI;cACpB,IAAI,CAACC,QAAQ,CAACF,IAAI,CAACG,WAAW,EAAEH,IAAI,CAACI,OAAO,CAAC;YAC/C,OAAO;cACLJ,IAAI,CAACC,QAAO,GAAI,KAAK;YACvB;YACAF,KAAK,EAAE;UACT;QACF;MACF,CAAC,CAAC;IACN,CAAC;IACDG,QAAQA,CAACC,WAAW,EAAEC,OAAO,EAAE;MAC7B,KAAK,IAAIJ,IAAG,IAAK,IAAI,CAACrB,KAAK,EAAE;QAC3B,IAAIqB,IAAI,CAACI,OAAM,IAAKA,OAAM,IAAKJ,IAAI,CAACG,WAAU,IAAKA,WAAW,EAAE;UAC9DH,IAAI,CAACC,QAAO,GAAI,IAAI;UACpB,IAAI,CAACI,KAAK,CAAC,cAAc,EAAEL,IAAI,CAAC;QAClC,OAAO;UACLA,IAAI,CAACC,QAAO,GAAI,KAAK;QACvB;MACF;IACF;EACF,CAAC;EACDK,UAAU,EAAE,CAAC,CAAC;EACdC,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC1B,QAAQ,EAAE;EACjB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}