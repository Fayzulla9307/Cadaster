{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-b4726ac2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"menu\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.items, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass([\"menu-item\", item.selected ? 'selected-menu-item' : '']),\n      onClick: $event => $options.loadDictionary(item.category),\n      key: index\n    }, _toDisplayString(item.description), 11, _hoisted_2);\n  }), 128))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","items","item","index","_normalizeClass","selected","onClick","$event","$options","loadDictionary","category","key","description","_hoisted_2"],"sources":["/Users/fayzulla/Dev/kadastr/frontend/kadastr/src/components/DirectoryMenu.vue"],"sourcesContent":["<template>\n  <div class=\"menu\">\n    <div\n      v-for=\"(item, index) in items\"\n      class=\"menu-item\"\n      @click=\"loadDictionary(item.category)\"\n      v-bind:key=\"index\"\n      v-bind:class=\"item.selected ? 'selected-menu-item' : ''\"\n    >\n      {{ item.description }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"DirectoryMenu\",\n  props: [],\n  watch: {},\n  data() {\n    return {\n      items: [],\n    };\n  },\n  methods: {\n    loadMenu() {\n      const token = sessionStorage.getItem(\"token\");\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      };\n      const url = this.$BASE_URL + \"/api/get_all_dictionaries/\";\n      axios.get(url, { headers }).then((response) => {\n        if (!response.data.auth_fail) {\n          this.items = JSON.parse(JSON.stringify(response.data.result));\n          var count = 0;\n          for (var item of this.items) {\n            if (count == 0) {\n              item.selected = true;\n              this.loadDictionary(item.category, item.description);\n            } else {\n              item.selected = false;\n            }\n            count++;\n          }\n        }\n      });\n    },\n    loadDictionary(category) {\n      for (var item of this.items) {\n        if (item.category == category) {\n          item.selected = true;\n          this.$emit(\"item-clicked\", item);\n        } else {\n          item.selected = false;\n        }\n      }\n    },\n  },\n  components: {},\n  mounted() {\n    this.loadMenu();\n  },\n};\n</script>\n\n<style scoped>\n.menu {\n  min-width: 100%;\n  font-weight: bolder;\n  height: 100%;\n}\n\n.menu-item {\n  min-width: calc(100% - 20px);\n  height: 50px;\n  color: black;\n  font-weight: bold;\n  margin-right: 20px;\n}\n\n.menu-item:hover {\n  background-color: #42b983;\n  cursor: pointer;\n}\n\n.selected-menu-item {\n  background-color: #42b983;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAM;;;uBAAjBC,mBAAA,CAUM,OAVNC,UAUM,I,kBATJD,mBAAA,CAQME,SAAA,QAAAC,WAAA,CAPoBC,KAAA,CAAAC,KAAK,GAArBC,IAAI,EAAEC,KAAK;yBADrBP,mBAAA,CAQM;MANJD,KAAK,EAAAS,eAAA,EAAC,WAAW,EAGHF,IAAI,CAACG,QAAQ;MAF1BC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,cAAc,CAACP,IAAI,CAACQ,QAAQ;MAC7BC,GAAG,EAAER;wBAGTD,IAAI,CAACU,WAAW,OAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}