{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0262b4e0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"table\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Spinner = _resolveComponent(\"Spinner\");\n  const _component_Filter = _resolveComponent(\"Filter\");\n  const _component_DistrictItem = _resolveComponent(\"DistrictItem\");\n  const _component_DistrictNewItem = _resolveComponent(\"DistrictNewItem\");\n  const _component_Paginator = _resolveComponent(\"Paginator\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.showSpinner ? (_openBlock(), _createBlock(_component_Spinner, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_Filter, {\n    onFilter: $options.filterTable,\n    filterVal: $data.filter\n  }, null, 8 /* PROPS */, [\"onFilter\", \"filterVal\"]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.items, item => {\n    return _openBlock(), _createBlock(_component_DistrictItem, {\n      key: item.id_district + '_' + item.id_area,\n      id: item.id_district + '_' + item.id_area,\n      displayButtons: true,\n      id_republic: 1,\n      id_area: item.id_area,\n      id_district: item.id_district,\n      district_name: item.district_name,\n      onDistrictUpdated: $options.updated\n    }, null, 8 /* PROPS */, [\"id\", \"id_area\", \"id_district\", \"district_name\", \"onDistrictUpdated\"]);\n  }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_DistrictNewItem, {\n    id_area: $data.areaIdLocal,\n    onDistrictUpdated: $options.added\n  }, null, 8 /* PROPS */, [\"id_area\", \"onDistrictUpdated\"]), _createVNode(_component_Paginator, {\n    count: $data.totalItems,\n    ipp: $data.ipp,\n    currentPage: $data.page,\n    onPageClick: $options.changePage\n  }, null, 8 /* PROPS */, [\"count\", \"ipp\", \"currentPage\", \"onPageClick\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","$data","showSpinner","_createBlock","_component_Spinner","key","_createVNode","_component_Filter","onFilter","$options","filterTable","filterVal","filter","_Fragment","_renderList","items","item","_component_DistrictItem","id_district","id_area","id","displayButtons","id_republic","district_name","onDistrictUpdated","updated","_component_DistrictNewItem","areaIdLocal","added","_component_Paginator","count","totalItems","ipp","currentPage","page","onPageClick","changePage"],"sources":["/Users/fayzulla/Dev/kadastr/frontend/kadastr/src/components/DistrictTable.vue"],"sourcesContent":["<template>\n  <div class=\"table\">\n    <Spinner v-if=\"showSpinner\" />\n    <Filter v-on:filter=\"filterTable\" v-bind:filterVal=\"filter\" />\n    <DistrictItem\n      v-for=\"item in items\"\n      v-bind:key=\"item.id_district + '_' + item.id_area\"\n      v-bind:id=\"item.id_district + '_' + item.id_area\"\n      v-bind:displayButtons=\"true\"\n      v-bind:id_republic=\"1\"\n      v-bind:id_area=\"item.id_area\"\n      v-bind:id_district=\"item.id_district\"\n      v-bind:district_name=\"item.district_name\"\n      v-on:district-updated=\"updated\"\n    />\n    <DistrictNewItem\n      v-bind:id_area=\"areaIdLocal\"\n      v-on:district-updated=\"added\"\n    />\n    <Paginator\n      v-bind:count=\"totalItems\"\n      v-bind:ipp=\"ipp\"\n      v-bind:currentPage=\"page\"\n      v-on:page-click=\"changePage\"\n    />\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport DistrictItem from \"../components/DistrictItem.vue\";\nimport DistrictNewItem from \"../components/DistrictNewItem.vue\";\nimport Paginator from \"../components/Paginator.vue\";\nimport Filter from \"../components/Filter.vue\";\nimport Spinner from \"../components/Spinner.vue\";\n\nexport default {\n  name: \"DistrictTable\",\n  props: [\"id_area\"],\n  watch: {\n    id_area: {\n      deep: true,\n      handler(n) {\n        this.page = 1;\n        this.showSpinner = true;\n        this.areaIdLocal = n;\n        console.log(this.areaIdLocal);\n        this.countItems();\n        //this.loadItems();\n      },\n    },\n  },\n  data() {\n    return {\n      items: [],\n      areaIdLocal: this.id_area,\n      totalItems: 0,\n      page: 1,\n      ipp: 10,\n      filter: \"\",\n      loadedItems: 0,\n      showSpinner: true,\n    };\n  },\n  methods: {\n    countItems() {\n      const token = sessionStorage.getItem(\"token\");\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      };\n      var url = this.$BASE_URL + \"/api/get_district_count/\";\n      axios\n        .post(\n          url,\n          { area_id: this.areaIdLocal, district_name: this.filter },\n          { headers }\n        )\n        .then((response) => {\n          if (!response.data[0].auth_fail) {\n            this.totalItems = response.data[0].result;\n            console.log(this.totalItems);\n            this.loadItems();\n          }\n        });\n    },\n    loadItems() {\n      const token = sessionStorage.getItem(\"token\");\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      };\n      var url = this.$BASE_URL + \"/api/get_districts/\";\n      const offset = (this.page - 1) * this.ipp;\n      console.log({\n        id_area: this.areaIdLocal,\n        district_name: this.filter,\n        offset: offset,\n        limit: this.ipp,\n      });\n      axios\n        .post(\n          url,\n          {\n            id_area: this.areaIdLocal,\n            district_name: this.filter,\n            offset: offset,\n            limit: this.ipp,\n          },\n          { headers }\n        )\n        .then((response) => {\n          if (!response.data[0].auth_fail) {\n            this.items = response.data[0].result;\n            this.loadedItems = 0;\n            this.showSpinner = false;\n          }\n        });\n    },\n    changePage(o) {\n      this.page = o.page;\n      this.countItems();\n      //this.loadItems();\n    },\n    added() {\n      this.page = 1;\n      this.filter = \"\";\n      this.countItems();\n    },\n    updated() {\n      this.filter = \"\";\n      this.countItems();\n      //this.loadItems();\n    },\n    filterTable(filter) {\n      this.page = 1;\n      this.filter = filter;\n      this.countItems();\n      //this.loadItems();\n    },\n  },\n  components: {\n    DistrictItem,\n    DistrictNewItem,\n    Paginator,\n    Filter,\n    Spinner,\n  },\n  mounted() {\n    this.page = 1;\n    this.countItems();\n    //this.loadItems();\n  },\n};\n</script>\n\n<style scoped>\n.table {\n  width: 100%;\n  height: 100%;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAO;;;;;;;uBAAlBC,mBAAA,CAwBM,OAxBNC,UAwBM,GAvBWC,KAAA,CAAAC,WAAW,I,cAA1BC,YAAA,CAA8BC,kBAAA;IAAAC,GAAA;EAAA,M,mCAC9BC,YAAA,CAA8DC,iBAAA;IAAjDC,QAAM,EAAEC,QAAA,CAAAC,WAAW;IAASC,SAAS,EAAEV,KAAA,CAAAW;yEACpDb,mBAAA,CAUEc,SAAA,QAAAC,WAAA,CATeb,KAAA,CAAAc,KAAK,EAAbC,IAAI;yBADbb,YAAA,CAUEc,uBAAA;MAROZ,GAAG,EAAEW,IAAI,CAACE,WAAW,SAASF,IAAI,CAACG,OAAO;MAC1CC,EAAE,EAAEJ,IAAI,CAACE,WAAW,SAASF,IAAI,CAACG,OAAO;MACzCE,cAAc,EAAE,IAAI;MACpBC,WAAW,EAAE,CAAC;MACdH,OAAO,EAAEH,IAAI,CAACG,OAAO;MACrBD,WAAW,EAAEF,IAAI,CAACE,WAAW;MAC7BK,aAAa,EAAEP,IAAI,CAACO,aAAa;MACnCC,iBAAgB,EAAEf,QAAA,CAAAgB;;kCAEzBnB,YAAA,CAGEoB,0BAAA;IAFOP,OAAO,EAAElB,KAAA,CAAA0B,WAAW;IACtBH,iBAAgB,EAAEf,QAAA,CAAAmB;6DAEzBtB,YAAA,CAKEuB,oBAAA;IAJOC,KAAK,EAAE7B,KAAA,CAAA8B,UAAU;IACjBC,GAAG,EAAE/B,KAAA,CAAA+B,GAAG;IACRC,WAAW,EAAEhC,KAAA,CAAAiC,IAAI;IACnBC,WAAU,EAAE1B,QAAA,CAAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}